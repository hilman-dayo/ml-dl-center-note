A CENTER NOTE ON LABEL BINARIZER.


#+PROPERTY: header-args:python :session labelbinarizer :results output drawer

* 概念
  - one-vs-all スキームに使用される
  - マルチクラスラベルには, クラスごとのリグレッサ (regressor) またはバイナリ分類機を訓練しないといけない
    (クラスに属しているかどうかを認識するため)
    - そのため, マルチクラスラベルをバイナリラベルに変換しなければならない

* コード

** OOP スタイル
   まず, インポートを行う.
   #+begin_src python
     from sklearn.preprocessing import LabelBinarizer
     import numpy as np  # クラスラベルを真似
   #+end_src

   #+RESULTS:
   :results:
   :end:
  
   データを作る.
   #+begin_src python
     # 300 x 1 の 5 クラスラベルを作る.
     labels = np.random.randint(0, 5, (300,1))
     print(labels[:5])
   #+end_src

   #+RESULTS:
   :results:
   [[1]
   [4]
   [1]
   [3]
   [3]]
   :end:
  
   バイナリ化を行う.
   #+begin_src python
     lb1 = LabelBinarizer()
     lb1.fit(labels)
     print(f'Classes: {lb1.classes_}')

     b_labels1 = lb1.transform(labels)
   #+end_src

   #+RESULTS:
   :results:
   Classes: [0 1 2 3 4]
   :end:
 
   他のバイナリ化のし方もある. 
   結果的には上と同じ.
   #+begin_src python
     lb2 = LabelBinarizer()
     b_labels2 = lb2.fit_transform(labels)
     print(f'Classes: {lb1.classes_}\n')

     print('The shape of:')
     print(f'b_labels1: {b_labels1.shape}')
     print(f'b_labels2: {b_labels2.shape}\n')

     print(f'They are all the same?')
     print((b_labels1 == b_labels2).all())
   #+end_src

   #+RESULTS:
   :results:
   Classes: [0 1 2 3 4]

   The shape of:
   b_labels1: (300, 5)
   b_labels2: (300, 5)

   They are all the same?
   True
   :end:

** 関数スタイル
   まず, インポートを行う.
   #+begin_src python
     from sklearn.preprocessing import label_binarize
   #+end_src

   #+RESULTS:
   :results:
   :end:

   このやり方は, あまり使われないではないかと考えられる.
   #+begin_src python
     # ラベルの順番に注意する必要があるかも
     labels_unique = np.unique(labels)
     b_labels3 = label_binarize(labels, labels_unique)


     print('The shape of:')
     print(f'b_labels3: {b_labels3.shape}\n')

     print(f'They are all the same?')
     print((b_labels1 == b_labels3).all())
   #+end_src

   #+RESULTS:
   :results:
   The shape of:
   b_labels3: (300, 5)

   They are all the same?
   True
   :end:
